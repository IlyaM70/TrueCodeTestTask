// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UsersManager.Data;

#nullable disable

namespace UsersManager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UsersManager.Models.Entities.Tag", b =>
                {
                    b.Property<Guid>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagId = new Guid("10ed2873-ff9d-4951-9346-1c71bd0ac0de"),
                            Value = "User"
                        },
                        new
                        {
                            TagId = new Guid("11ed2873-ff9d-4951-9346-1c71bd0ac0de"),
                            Value = "Moderator"
                        },
                        new
                        {
                            TagId = new Guid("12ed2873-ff9d-4951-9346-1c71bd0ac0de"),
                            Value = "NewUser"
                        },
                        new
                        {
                            TagId = new Guid("13ed2873-ff9d-4951-9346-1c71bd0ac0de"),
                            Value = "RegularUser"
                        });
                });

            modelBuilder.Entity("UsersManager.Models.Entities.TagToUser", b =>
                {
                    b.Property<Guid>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityId");

                    b.HasIndex("TagId");

                    b.HasIndex("UserId");

                    b.ToTable("TagToUser");

                    b.HasData(
                        new
                        {
                            EntityId = new Guid("2c2e557f-a2e9-4deb-9718-670f7cfa56e9"),
                            TagId = new Guid("10ed2873-ff9d-4951-9346-1c71bd0ac0de"),
                            UserId = new Guid("10fd2873-ff9d-4951-9346-1c71bd0ac0de")
                        },
                        new
                        {
                            EntityId = new Guid("42f82055-972b-4973-9d09-171abb2d9cd0"),
                            TagId = new Guid("12ed2873-ff9d-4951-9346-1c71bd0ac0de"),
                            UserId = new Guid("10fd2873-ff9d-4951-9346-1c71bd0ac0de")
                        },
                        new
                        {
                            EntityId = new Guid("5dfd5f9e-8095-4d6e-a9e3-4c180385c58a"),
                            TagId = new Guid("10ed2873-ff9d-4951-9346-1c71bd0ac0de"),
                            UserId = new Guid("11fd2873-ff9d-4951-9346-1c71bd0ac0de")
                        },
                        new
                        {
                            EntityId = new Guid("34299d77-1913-4672-979b-c3a2dae2012e"),
                            TagId = new Guid("13ed2873-ff9d-4951-9346-1c71bd0ac0de"),
                            UserId = new Guid("11fd2873-ff9d-4951-9346-1c71bd0ac0de")
                        },
                        new
                        {
                            EntityId = new Guid("72307b4a-4f2b-4a5f-95f7-522e3c47a767"),
                            TagId = new Guid("10ed2873-ff9d-4951-9346-1c71bd0ac0de"),
                            UserId = new Guid("12fd2873-ff9d-4951-9346-1c71bd0ac0de")
                        },
                        new
                        {
                            EntityId = new Guid("da6dff99-d615-4773-b38b-d0d5d2b48b07"),
                            TagId = new Guid("13ed2873-ff9d-4951-9346-1c71bd0ac0de"),
                            UserId = new Guid("12fd2873-ff9d-4951-9346-1c71bd0ac0de")
                        },
                        new
                        {
                            EntityId = new Guid("831e003a-fa2a-4516-8e44-2ed4a757f1ac"),
                            TagId = new Guid("11ed2873-ff9d-4951-9346-1c71bd0ac0de"),
                            UserId = new Guid("13fd2873-ff9d-4951-9346-1c71bd0ac0de")
                        },
                        new
                        {
                            EntityId = new Guid("821052f9-e3e6-4276-8eed-ebc0d30e46ba"),
                            TagId = new Guid("13ed2873-ff9d-4951-9346-1c71bd0ac0de"),
                            UserId = new Guid("13fd2873-ff9d-4951-9346-1c71bd0ac0de")
                        },
                        new
                        {
                            EntityId = new Guid("bf6df672-b7de-41d7-bc28-4ac88bab3159"),
                            TagId = new Guid("11ed2873-ff9d-4951-9346-1c71bd0ac0de"),
                            UserId = new Guid("14fd2873-ff9d-4951-9346-1c71bd0ac0de")
                        },
                        new
                        {
                            EntityId = new Guid("747e719a-7a1a-4adc-bb70-1720390156dc"),
                            TagId = new Guid("12ed2873-ff9d-4951-9346-1c71bd0ac0de"),
                            UserId = new Guid("14fd2873-ff9d-4951-9346-1c71bd0ac0de")
                        },
                        new
                        {
                            EntityId = new Guid("e5651ea4-a9c4-4357-be55-4ac88f676a53"),
                            TagId = new Guid("10ed2873-ff9d-4951-9346-1c71bd0ac0de"),
                            UserId = new Guid("15fd2873-ff9d-4951-9346-1c71bd0ac0de")
                        },
                        new
                        {
                            EntityId = new Guid("a808dd7c-cb8c-40ba-a143-a862af02e93c"),
                            TagId = new Guid("13ed2873-ff9d-4951-9346-1c71bd0ac0de"),
                            UserId = new Guid("15fd2873-ff9d-4951-9346-1c71bd0ac0de")
                        });
                });

            modelBuilder.Entity("UsersManager.Models.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("10fd2873-ff9d-4951-9346-1c71bd0ac0de"),
                            Domain = "first.com",
                            Name = "Alex"
                        },
                        new
                        {
                            UserId = new Guid("11fd2873-ff9d-4951-9346-1c71bd0ac0de"),
                            Domain = "second.com",
                            Name = "Sam"
                        },
                        new
                        {
                            UserId = new Guid("12fd2873-ff9d-4951-9346-1c71bd0ac0de"),
                            Domain = "first.com",
                            Name = "Dmitriy"
                        },
                        new
                        {
                            UserId = new Guid("13fd2873-ff9d-4951-9346-1c71bd0ac0de"),
                            Domain = "second.com",
                            Name = "Victor"
                        },
                        new
                        {
                            UserId = new Guid("14fd2873-ff9d-4951-9346-1c71bd0ac0de"),
                            Domain = "first.com",
                            Name = "Azat"
                        },
                        new
                        {
                            UserId = new Guid("15fd2873-ff9d-4951-9346-1c71bd0ac0de"),
                            Domain = "second.com",
                            Name = "Arthur"
                        });
                });

            modelBuilder.Entity("UsersManager.Models.Entities.TagToUser", b =>
                {
                    b.HasOne("UsersManager.Models.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UsersManager.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
